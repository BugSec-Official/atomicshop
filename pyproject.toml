# Build systems for 'wheel' and 'setuptools' of version 61.0.0 and higher. Only in version 61 was introsuced full support for parsing 'pyproject.toml'.
[build-system]
requires = [
    "setuptools >= 61.0.0",
#    "wheel",
]
build-backend = "setuptools.build_meta"

#[tool.setuptools]
## If you have several folders, you have to specify which one is the package.
#packages = ["atomicshop"]

#[tool.setuptools.packages]
#find = {}

[tool.setuptools.packages.find]
include = ["atomicshop*"]

# Getting verision from '__init__.py' of the 'atomicshop' package.
[tool.setuptools.dynamic]
version = {attr = "atomicshop.__version__"}

# While building, installing package add all non-python files from folder inside package: 'addons'. Workls recursively.
# Usage:
# import importlib.resources
# package_name = 'atomicshop'
# resource = 'addons/folder_name/file_name.py'
# destination = 'path/to/your/destination/folder/test.py'
# with importlib.resources.path(package_name, resource) as resource_path:
#    shutil.copy(resource_path, destination)
# importlib.resources.path provides a context manager that temporarily extracts the resource
# to the filesystem and gives you a path to it. Once you exit the with block, any temporary
# file created is cleaned up (deleted). If you try to use pkg_resources.path outside a
# with statement, you won't get a straightforward file path; instead, you'll get a context
# manager object, which isn't what shutil.copy expects.
[tool.setuptools.package-data]
"atomicshop.addons" = ["**"]

[project]
# Name of the package.
name = "atomicshop"
# This is needed in order to get the 'version' variable from '[tool.setuptools.dynamic]' section.
dynamic = ["version"]
# Authors. 'email' section can be added for each author.
authors = [
  { name="Denis Kras" }
]
# Short description.
description = "Atomic functions and classes to make developer life easier"
license = {file = "LICENSE.txt"}
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "wheel",
    "cryptography",
    "dnslib",
    "dnspython",
    "docker",
    "numpy",
    "openpyxl",
    "pandas",
    "paramiko",
    "playwright",
    "playwright-stealth",
    "protobuf",
    "psutil",
    "pyautogui",
    "pyopenssl",
    "python-bidi",
    "python-docx",
    "pywin32; platform_system == 'Windows'",
    "SoundCard",
    "soundfile",
    "SpeechRecognition",
    "tldextract"
]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

[project.urls]
"Homepage" = "https://github.com/BugSec-Official/atomicshop"